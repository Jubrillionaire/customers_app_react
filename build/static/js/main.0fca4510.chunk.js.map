{"version":3,"sources":["components/CustomersForm.js","components/Customer.js","components/CustomerList.js","App.js","reportWebVitals.js","index.js"],"names":["CustomersForm","handleEditCustomer","handleAddCustomer","editMode","editCustomer","setEditMode","useState","formData","setFormData","handleChange","e","target","name","value","useEffect","age","firstname","lastname","phone","email","onSubmit","preventDefault","required","type","placeholder","onChange","className","Customer","customer","grabEditDetails","handleDeleteCustomer","id","onClick","CustomerList","customers","map","App","setCustomers","setEditCustomer","URL","loadData","a","fetch","response","json","sortedCustomers","sort","b","console","log","method","headers","body","JSON","stringify","updatedCustomers","i","OldArr","filteredCustomers","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fca4510.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst CustomersForm = ({handleEditCustomer, handleAddCustomer, editMode, editCustomer, setEditMode}) => {\n\n    const [formData, setFormData] = useState({})\n\n    const handleChange = e => {\n        setFormData({...formData, [e.target.name]: e.target.value})\n    }\n\n    const resetForm = () => {\n        setFormData({age: \"\", firstname: \"\", lastname: \"\", phone: \"\", email: \"\"})\n    }\n\nuseEffect(() => {\n   setFormData(editCustomer)\n   if(editMode === false){\n    resetForm()\n   }\n}, [handleEditCustomer])\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if(editMode){\n            setFormData(editCustomer)\n             handleEditCustomer(formData)\n             setEditMode(false)\n        }else{\n            handleAddCustomer(formData);\n        }\n    \n    }\nconst {age, firstname, lastname, phone, email} = formData\n    return (\n            <form onSubmit={handleSubmit}>\n                <h2>Customer's form</h2>\n                <input required type='text' value={firstname}  name='firstname' placeholder='enter first name' onChange={handleChange} />\n                <input required type='text' value={lastname} name='lastname' placeholder='enter last name' onChange={handleChange} />\n                <input required type='number' value={age} name='age' placeholder='enter age' onChange={handleChange} />\n                <input required type='email' value={email} name='email' placeholder='enter email' onChange={handleChange} />\n                <input required type='number' value={phone} name='phone' placeholder='enter phone' onChange={handleChange} />\n                <input className='submit'  type='submit' value={editMode ? 'Edit Customer' : 'Add customer'} />\n            </form>\n    )\n}\n\nexport default CustomersForm\n","import React from 'react'\n\nconst Customer = ({customer, grabEditDetails,setEditMode, handleDeleteCustomer}) => {\n    const {firstname, lastname, age, phone, email, id} = customer\n\n    const handleEdit = () => {\n     grabEditDetails(customer)\n     setEditMode(true)\n    }\n    return (\n        <ul>\n            <li>First Name: {firstname}</li>\n            <li>Last Name: {lastname}</li>\n            <li>Age: {age}</li>\n            <li>Phone: {phone}</li>\n            <li>Email: {email}</li>\n            <li className='btns'>\n            <button onClick={() => handleDeleteCustomer(id)}>Delete</button> \n            <button onClick={() => handleEdit()}>Edit</button>\n            </li>\n           \n        </ul>\n\n    )\n}\n\nexport default Customer\n","import React from 'react'\nimport Customer from './Customer'\n\nconst CustomerList = ({customers, grabEditDetails, setEditMode, handleDeleteCustomer}) => {\n\n\n    return (\n        <div className=\"customers\">\n             {customers.map(customer => <Customer handleDeleteCustomer={handleDeleteCustomer} customer={customer} setEditMode={setEditMode} grabEditDetails={grabEditDetails} key={customer.id}/>) }\n        </div>\n    )\n}\n\nexport default CustomerList\n","import { useEffect, useState } from \"react\";\nimport CustomersForm from \"./components/CustomersForm\";\nimport CustomerList from \"./components/CustomerList\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [customers, setCustomers] = useState([]);\n  const [editCustomer, setEditCustomer] = useState({});\n  const [editMode, setEditMode] = useState(false);\n\n  const URL = \"https://customers-appv2.herokuapp.com/api/customers\";\n\n  const loadData = async () => {\n    try {\n     \n      const response = await fetch(URL);\n      const { customers } = await response.json();\n      const sortedCustomers = customers.sort((a, b) => a.id - b.id);\n      setCustomers(sortedCustomers);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  \n\n  const handleEditCustomer = async ({id, age, firstname, lastname, email, phone}) => {\n\n    try {\n      const response =await  fetch(`${URL}/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          firstname,\n          lastname,\n          age,\n          email,\n          phone\n        }),\n      });\n\n      const {customer} = await response.json();\n      const updatedCustomers = customers.map(i => i.id === customer.id ? customer : i)\n      setCustomers(updatedCustomers)\n    } catch (err) {\n      console.log(err);\n    }\n\n  };\n  const handleAddCustomer = async ({id, age, firstname, lastname, email, phone}) => {\n    try {\n      const response =await  fetch(URL, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          firstname,\n          lastname,\n          age,\n          email,\n          phone\n        }),\n      });\n\n      const {customer} = await response.json();\n      setCustomers((OldArr) => [...OldArr, customer])\n \n    } catch (err) {\n      console.log(err);\n    }\n\n  };\n\n\n  const handleDeleteCustomer = async (id) => {\n    try {\n      const response =await  fetch(`${URL}/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n      });\n\n     const filteredCustomers = customers.filter(customer => customer.id !== id)\n      setCustomers(filteredCustomers)\n \n    } catch (err) {\n      console.log(err);\n    }\n\n  };\n\n\n  const grabEditDetails = (customer) => {\n    setEditCustomer(customer);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Customers App</h1>\n      <CustomersForm\n        editCustomer={editCustomer}\n        handleAddCustomer={handleAddCustomer}\n        handleEditCustomer={handleEditCustomer}\n        editMode={editMode}\n        setEditMode={setEditMode}\n        editCustomer={editCustomer}\n      />\n      <CustomerList\n      handleDeleteCustomer={handleDeleteCustomer}\n        setEditMode={setEditMode}\n        grabEditDetails={grabEditDetails}\n        customers={customers}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}